TODO :

TEST user, post, postcom, like, friend, topic, topicmessage

Next gros TODO :

+ revoir penser à vérifier les paramètres des requêtes (au fur et à mesure)

rajouter catch? + revoir la gestion des erreurs

USER :

FRIEND :

POST :

LIKE :

CHAT :

réfléchir à la structure (entité conversation + messageconversation ??)

Notification :

table & routes





WEB-APP

=> revoir auth et deconnexion

=> portail de login / création

=> landing-page

=> profile

=> search

=> topic

=> landing admin





DONE :


rajouter ID quand je créé un nouveau user, ou que je créé quelque chose;

rajouter erreur dans friend create si premier user existe pas;

valider les paramètres de update si je veux limiter les champs à update;

Routes topic, topicmessage, postcom;

limiter length title topic, et autre champ de texte;

post.find update comme dans topic.find;

find rajouter erreur si not found comme dans topic.find;

changer erreur find.list if len == 0 erreur else renvoi array;

update rajouter erreur si not found comme dans topic.update;

like table & routes;

update rajouter une condition pour les champs que je ne veux pas modifier;

aggreger des données pour certaine requête (post + com + like?) -- done (si j'ai le temps le faire pour d'autre entités)

modifier tous les champs, enlever les underscore (un petit peu tous les matins)

supprimer user implique d'autre suppression => pareil pour les autres entités (genre post/postcom/like)
 - revoir la suppresion des user, ne supprime pas bien les post et les topics faire un beau truc





NOT NECESSARY FOR NOW :


(erreur update post => error wrong id);

rajouter un find by email pour le user;